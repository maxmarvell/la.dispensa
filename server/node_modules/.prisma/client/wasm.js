
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password',
  salt: 'salt',
  image: 'image'
};

exports.Prisma.RecipeScalarFieldEnum = {
  id: 'id',
  createdOn: 'createdOn',
  updatedAt: 'updatedAt',
  title: 'title',
  authorId: 'authorId',
  description: 'description',
  image: 'image',
  public: 'public'
};

exports.Prisma.IngredientScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ConnectionScalarFieldEnum = {
  connectedWithId: 'connectedWithId',
  connectedById: 'connectedById',
  accepted: 'accepted'
};

exports.Prisma.TagScalarFieldEnum = {
  recipeId: 'recipeId',
  name: 'name'
};

exports.Prisma.RecipeEditorsScalarFieldEnum = {
  recipeId: 'recipeId',
  userId: 'userId'
};

exports.Prisma.RatingScalarFieldEnum = {
  recipeId: 'recipeId',
  userId: 'userId',
  value: 'value'
};

exports.Prisma.ReviewScalarFieldEnum = {
  recipeId: 'recipeId',
  userId: 'userId',
  text: 'text',
  createdOn: 'createdOn'
};

exports.Prisma.InstructionScalarFieldEnum = {
  description: 'description',
  recipeId: 'recipeId',
  step: 'step'
};

exports.Prisma.TimeAndTemperatureScalarFieldEnum = {
  recipeId: 'recipeId',
  step: 'step',
  hours: 'hours',
  minutes: 'minutes',
  temperature: 'temperature',
  unit: 'unit'
};

exports.Prisma.RecipeIngredientScalarFieldEnum = {
  recipeId: 'recipeId',
  ingredientId: 'ingredientId',
  quantity: 'quantity',
  unit: 'unit'
};

exports.Prisma.ComponentScalarFieldEnum = {
  recipeId: 'recipeId',
  componentId: 'componentId',
  amount: 'amount'
};

exports.Prisma.IterationScalarFieldEnum = {
  id: 'id',
  recipeId: 'recipeId',
  createdOn: 'createdOn',
  updatedAt: 'updatedAt',
  parentId: 'parentId',
  tag: 'tag'
};

exports.Prisma.IngredientIterationScalarFieldEnum = {
  iterationId: 'iterationId',
  ingredientId: 'ingredientId',
  quantity: 'quantity',
  unit: 'unit'
};

exports.Prisma.InstructionIterationScalarFieldEnum = {
  description: 'description',
  iterationId: 'iterationId',
  step: 'step'
};

exports.Prisma.TimeAndTemperatureIterationScalarFieldEnum = {
  iterationId: 'iterationId',
  instructionStep: 'instructionStep',
  hours: 'hours',
  minutes: 'minutes',
  temperature: 'temperature',
  unit: 'unit'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TemperatureUnit = exports.$Enums.TemperatureUnit = {
  C: 'C',
  K: 'K'
};

exports.IngredientUnit = exports.$Enums.IngredientUnit = {
  G: 'G',
  KG: 'KG',
  CUP: 'CUP',
  ML: 'ML',
  L: 'L',
  OZ: 'OZ'
};

exports.Prisma.ModelName = {
  User: 'User',
  Recipe: 'Recipe',
  Ingredient: 'Ingredient',
  Connection: 'Connection',
  Tag: 'Tag',
  RecipeEditors: 'RecipeEditors',
  Rating: 'Rating',
  Review: 'Review',
  Instruction: 'Instruction',
  TimeAndTemperature: 'TimeAndTemperature',
  RecipeIngredient: 'RecipeIngredient',
  Component: 'Component',
  Iteration: 'Iteration',
  IngredientIteration: 'IngredientIteration',
  InstructionIteration: 'InstructionIteration',
  TimeAndTemperatureIteration: 'TimeAndTemperatureIteration'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
